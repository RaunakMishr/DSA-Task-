class Solution {
    public int search(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        int mid;

        while(start <= end) {
            mid = start + (end - start)/2;

            if(nums[mid] == target) return mid;

            if(start == end && nums[start] == target) {
           	    return start;
            } else if(start == end && nums[start] != target) {
            	break;
            }

            // Left sorted target in right
            if(nums[start] <= nums[mid] && (target > nums[mid] || target < nums[start])) { 
                start = mid + 1;
            } // Left Sorted target in left
            else if(nums[start] < nums[mid] && (target < nums[mid] && target >= nums[start])) {
                end = mid - 1;
            } // Right Sorted target in right
            else if(nums[end] > nums[mid] && target > nums[mid] && target <= nums[end]) {
                start = mid + 1;
            } // Right Sorted target in left
            else if(nums[end] >= nums[mid] && (target < nums[mid] || target > nums[end])) {
                end = mid - 1;
            }
        }
        return -1;
    }
}
